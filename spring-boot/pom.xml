<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.marcelhodan.blog</groupId>
	<artifactId>spring-boot</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<modules>
		<module>spring-boot-api</module>
		<module>spring-boot-service</module>
	</modules>

	<properties>
		<docker.image.prefix>blog</docker.image.prefix>
		<java.version>1.8</java.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<version.spring-boot>2.1.2.RELEASE</version.spring-boot>
		<version.springfox-swagger2>2.9.2</version.springfox-swagger2>
		<version.mapstruct>1.3.0.Final</version.mapstruct>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- APPLICATION START -->
			<dependency>
				<groupId>de.marcelhodan.blog</groupId>
				<artifactId>spring-boot-api</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>de.marcelhodan.blog</groupId>
				<artifactId>spring-boot-service</artifactId>
				<version>${project.version}</version>
			</dependency>
			<!-- APPLICATION END -->
			<!-- SPRING START -->
			<dependency>
				<!-- Import dependency management from Spring Boot -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${version.spring-boot}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${version.spring-boot}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-jpa</artifactId>
				<version>${version.spring-boot}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${version.spring-boot}</version>
				<scope>test</scope>
			</dependency>
			<!-- SPRING END -->
			<!-- JPA START -->
			<!-- https://mvnrepository.com/artifact/com.h2database/h2 -->
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>1.4.198</version>
			</dependency>
			<!-- JPA END -->
			<!-- LIBS START -->
			<!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>27.0.1-jre</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>1.18.6</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-csv -->
			<dependency>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-csv</artifactId>
				<version>2.9.8</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-api</artifactId>
				<version>5.4.0</version>
				<scope>test</scope>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.mapstruct/mapstruct -->
			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct</artifactId>
				<version>${version.mapstruct}</version>
			</dependency>
			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct-processor</artifactId>
				<version>${version.mapstruct}</version>
				<scope>provided</scope>
			</dependency>
			<!-- LIBS END -->
			<!-- SWAGGER START -->
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${version.springfox-swagger2}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-bean-validators</artifactId>
				<version>${version.springfox-swagger2}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${version.springfox-swagger2}</version>
			</dependency>
			<!-- SWAGGER END -->
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${version.spring-boot}</version>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>dockerfile-maven-plugin</artifactId>
					<version>1.4.9</version>
					<configuration>
						<repository>${docker.image.prefix}/${project.artifactId}</repository>
					</configuration>
				</plugin>
				<plugin>
					<!-- INFO: necessary for lombok+mapstruct combination -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.6.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.1.1</version>
					<configuration>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
								<classpathPrefix>libs/</classpathPrefix>
								<mainClass>de.marcelhodan.blog.springboot.SpringBootApplication.java</mainClass>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>3.1.0</version>
					<executions>
						<execution>
							<id>copy-dependencies</id>
							<phase>package</phase>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
							<configuration>
								<outputDirectory>target/libs</outputDirectory>
								<overWriteReleases>false</overWriteReleases>
								<overWriteSnapshots>false</overWriteSnapshots>
								<overWriteIfNewer>true</overWriteIfNewer>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
